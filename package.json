{
	"name": "hl7tools",
	"displayName": "HL7Tools",
	"description": "HL7 tools for Visual Studio Code",
	"version": "2.0.4",
	"icon": "images/hl7tools-icon.png",
	"publisher": "RobHolme",
	"license": "MIT",
	"bugs": {
		"url": "https://github.com/RobHolme/vscode-hl7tools/issues"
	},
	"homepage": "https://github.com/RobHolme/vscode-hl7tools/blob/master/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/RobHolme/vscode-hl7tools.git"
	},
	"engines": {
		"vscode": "^1.69.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:hl7",
		"onCommand:hl7tools.DisplaySegmentFields",
		"onCommand:hl7tools.MaskIdentifiers",
		"onCommand:hl7tools.HighlightHL7Item",
		"onCommand:hl7tools.ClearHighlightedFields",
		"onCommand:hl7tools.IdentifyFields",
		"onCommand:hl7tools.SplitBatchFile",
		"onCommand:hl7tools.SendMessage",
		"onCommand:hl7tools.StartListener",
		"onCommand:hl7tools.StopListener",
		"onCommand:hl7tools.ExtractSegments",
		"onCommand:hl7tools.AddLinebreakToSegment",
		"onCommand:hl7tools.ExtractFields",
		"onCommand:hl7tools.CheckRequiredFields",
		"onCommand:hl7tools.FindField"
	],
	"main": "./out/extension.js",
	"contributes": {
		"keybindings": [
			{
				"command": "hl7tools.HighlightHL7Item",
				"key": "ctrl+alt+h",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.ClearHighlightedFields",
				"key": "ctrl+alt+c",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.IdentifyFields",
				"key": "ctrl+alt+i",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.MaskIdentifiers",
				"key": "ctrl+alt+m",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.DisplaySegmentFields",
				"key": "ctrl+alt+d",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.SplitBatchFile",
				"key": "ctrl+alt+b",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.SendMessage",
				"key": "ctrl+alt+s",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.SendMultipleMessages",
				"key": "ctrl+alt+g",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.StartListener",
				"key": "ctrl+alt+l",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.StopListener",
				"key": "ctrl+alt+p",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.ExtractSegments",
				"key": "ctrl+alt+e",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.AddLinebreakToSegment",
				"key": "ctrl+alt+a",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.ExtractFields",
				"key": "ctrl+alt+f",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.CheckRequiredFields",
				"key": "ctrl+alt+k",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.FindField",
				"key": "ctrl+alt+f",
				"when": "editorLangId == hl7"
			},
			{
				"command": "hl7tools.FindNextField",
				"key": "ctrl+alt+n",
				"when": "editorLangId == hl7"
			}
		],
		"commands": [
			{
				"command": "hl7tools.DisplaySegmentFields",
				"title": "HL7 Tools: Display Segment Fields"
			},
			{
				"command": "hl7tools.MaskIdentifiers",
				"title": "HL7 Tools: Mask Identifiers"
			},
			{
				"command": "hl7tools.HighlightHL7Item",
				"title": "HL7 Tools: Highlight Field"
			},
			{
				"command": "hl7tools.ClearHighlightedFields",
				"title": "HL7 Tools: Clear Highlighted Fields"
			},
			{
				"command": "hl7tools.IdentifyFields",
				"title": "HL7 Tools: Identify Fields"
			},
			{
				"command": "hl7tools.SplitBatchFile",
				"title": "HL7 Tools: Split HL7 Batch Files"
			},
			{
				"command": "hl7tools.SendMessage",
				"title": "HL7 Tools: Send Message"
			},
			{
				"command": "hl7tools.SendMultipleMessages",
				"title": "HL7 Tools: Send Multiple Messages"
			},
			{
				"command": "hl7tools.StartListener",
				"title": "HL7 Tools: Start Message Listener"
			},
			{
				"command": "hl7tools.StopListener",
				"title": "HL7 Tools: Stop Message Listener"
			},
			{
				"command": "hl7tools.ExtractSegments",
				"title": "HL7 Tools: Extract Matching Segments"
			},
			{
				"command": "hl7tools.AddLinebreakToSegment",
				"title": "HL7 Tools: Add Linebreak to Segments"
			},
			{
				"command": "hl7tools.ExtractFields",
				"title": "HL7 Tools: Extract Fields from all Messages"
			},
			{
				"command": "hl7tools.CheckRequiredFields",
				"title": "HL7 Tools: Check required fields"
			},
			{
				"command": "hl7tools.FindField",
				"title": "HL7 Tools: Find Field"
			},
			{
				"command": "hl7tools.FindNextField",
				"title": "HL7 Tools: Find Next Field"
			}
		],
		"languages": [
			{
				"id": "hl7",
				"aliases": [
					"HL7",
					"hl7"
				],
				"extensions": [
					".hl7",
					".HL7"
				]
			}
		],
		"grammars": [
			{
				"language": "hl7",
				"scopeName": "text.hl7",
				"path": "./syntax/hl7.tmLanguage"
			}
		],
		"configuration": {
			"type": "object",
			"title": "HL7 Tools",
			"properties": {
				"hl7tools.highlightBackgroundColor": {
					"type": "string",
					"default": "rgba(0,255,0,0.3)",
					"description": "The background colour applied to highlighted HL7 fields. Requires a RGBA value."
				},
				"hl7tools.DefaultRemoteHost": {
					"type": "string",
					"default": "127.0.0.1:5000",
					"description": "The default remote host and IP address to send HL7 messages to."
				},
				"hl7tools.FavouriteRemoteHosts": {
					"type": "array",
					"items": {
						"type": "object",
						"required": [
							"Hostname",
							"Port",
							"Description"
						],
						"optional": [
							"UseTLS"
						],
						"properties": {
							"Hostname": {
								"type": "string",
								"description": "Specifies the remote hostname or IP address."
							},
							"Port": {
								"type": "integer",
								"description": "Specifies the remote port number."
							},
							"Description": {
								"type": "string",
								"description": "Provides a description to identify the connection."
							},
							"UseTLS": {
								"type": "boolean",
								"description": "Set to true to enable TLS for the connection."
							}
						}
					},
					"default": [],
					"description": "Enter favourite endpoints for Send Message command. Provide an array of objects, refer to Send Message section of https://github.com/RobHolme/vscode-hl7tools/blob/master/README.md for a sample config."
				},
				"hl7tools.ConnectionTimeout": {
					"type": "number",
					"default": 5,
					"description": "The TCP connection timeout (in seconds) when sending a HL7 message."
				},
				"hl7tools.DefaultListenerPort": {
					"type": "number",
					"default": 5000,
					"description": "The default TCP port to listen on for messages (HL7 Tools: Start Message Listener)."
				},
				"hl7tools.SendACK": {
					"type": "boolean",
					"default": true,
					"description": "Send a ACK in response to messages received (HL7 Tools: Start Message Listener)."
				},
				"hl7tools.AckCode": {
					"type": "string",
					"default": "CA",
					"enum": [
						"AA",
						"AE",
						"AR",
						"CA",
						"CE",
						"CR"
					],
					"description": "Value to use in MSA-1 of the ACK message when receiving a hl7 message."
				},
				"hl7tools.MaxLinesForFieldDescriptions": {
					"type": "number",
					"default": 200,
					"description": "Stop applying hover fields descriptions after this number of lines in a file (poor performance on large files)"
				},
				"hl7tools.AddLinebreakOnActivation": {
					"type": "boolean",
					"default": false,
					"description": "Apply the command 'Add Linebreak to Segments' every time a file is active in the editor"
				},
				"hl7tools.SocketEncoding": {
					"type": "string",
					"default": "utf-8",
					"enum": [
						"UTF-8",
						"UTF-16LE",
						"ISO-8859-1",
						"LATIN 1",
						"ASCII"
					],
					"description": "The TCP socket encoding used when sending and receiving messages"
				},
				"hl7tools.CustomSegmentSchema": {
					"type": "string",
					"description": "Full path and filename of custom Schema.js file (Z segment definitions). Applied in addition to standard schema."
				},
				"hl7tools.TrustedCertificateAuthorities": {
					"type": "array",
					"description": "List of paths to trusted Certificate Authorities (CA) public keys (Base64 CER files). Supports TLS connections to endpoints using internal Enterprise CAs.",
					"items": {
						"type": "string",
						"description": "Path to CA file (base64 CER)"
					}
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.1",
		"@types/node": "16.x",
		"@types/vscode": "^1.69.0",
		"@typescript-eslint/eslint-plugin": "^5.31.0",
		"@typescript-eslint/parser": "^5.31.0",
		"@vscode/test-electron": "^2.1.5",
		"eslint": "^8.20.0",
		"glob": "^8.0.3",
		"mocha": "^10.0.0",
		"typescript": "^4.9.5"
	},
	"__metadata": {
		"id": "b919e7cc-6fa1-454b-ab7f-216ed8d48f19",
		"publisherId": "be56bacd-8aad-4010-8775-e3f3abf3f41d",
		"publisherDisplayName": "Rob Holme"
	}
}
